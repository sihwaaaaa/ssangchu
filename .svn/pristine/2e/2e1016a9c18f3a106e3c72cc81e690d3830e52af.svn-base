package kr.co.poetrypainting.controller;


import kr.co.poetrypainting.domain.MemberVO;
import kr.co.poetrypainting.domain.dto.LoginDTO;
import kr.co.poetrypainting.service.MemberService;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.extern.log4j.Log4j;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.config.annotation.EnableWebMvc;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * 회원 컨트롤러
 * @author 방한솔
 */
@Controller
@RequestMapping("/member/*")
@Data
@AllArgsConstructor
@Slf4j
public class MemberController {
    private MemberService memberService;

    @GetMapping("/login")
    public String loginGet(){
        return "member/login";
    }

    @GetMapping("/join")
    public String joinGet(){
        return "member/join";
    }

    @PostMapping("/login")
    public String loginPost(LoginDTO joinForm, HttpServletRequest request, HttpServletResponse response){
        log.info("login Post");
        log.info("{}", joinForm);

        MemberVO loginMember = memberService.login(joinForm);


        if(loginMember == null){
            String errorMsg = "아이디가 없거나 비밀번호가 틀렸습니다";
            request.setAttribute("errorMsg", errorMsg);

            return "member/login";
        } else {
            request.getSession().setAttribute("loginMember", loginMember);
        }

        return "redirect:/";
    }

    @GetMapping("/logout")
    public String logout(HttpServletRequest request){
        request.getSession().invalidate();

        return "redirect:/";
    }
}
